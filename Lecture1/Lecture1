Lets discuss something about programming - 
How machine knows what are we trying to do ? 
Firstly , We write a source code and then eventually the source code is converted to Machine code which is understood by the machine .
Everything is brought under the umbrella that we send something into input and comes something out of that . 
We are going to need something which translates the source code into the machine code . This is called as Compiler .
A compiler can be written by a Facebook , Google , Apple . What we do is  we download the compiler and get the things done . 

Visual studio code for cs50 .
we are going to use the cloud version of the visual studio code and make things easy . 
https://cs50.dev 
we are going to learn multiple things - 
we are not going to use the GUI version whereas we are going to use the CLI - command line interface .

how do we run the c program in the terminal ?
 code hello.c 
 make hello
 ./hello 

 We are going to follow few convention while naming the program -
 we will only use smallcase 
 we will not use spaces . 
we will use the required extension . 


So when we use the make statements , it will be very smart . It is going to convert the code present in the source code and convert it to the machine code .

\n - is used to go to next line . 

why is the \n is inside the quotation mark ? Because that is how the syntax is done . 
\n is a special pattern which tells the printf that you want to move to the next line.

What are functions ?
Functions are basically the way or the instructions about how the things needs to be performed .

printf("hello, World \n");

\n is known as escape sequences . 

include stdio.h - is basically a way of including the various other function which are used in the programs. 

What is a library ? Library is a code which someone else has wrote and which is open source.  Literally , You can use it in your code .
It can be closed source too . 
Libraries are the best source to use in you code. 

Libraries tells us that someone else can do  the hard work and we can solve the better problems .

manual Pages - manual.cs50.io

Programming is about finding answers to the problems we are trying to solve. Its not about knowing everything but knowing every ways to try and solve it 


get_char 
get_double 
get_float 
get_string
get_long

Functions 

Functions are instruction which does some activity for you , It can take arguments and return a value if required . 
get_string is for now going to be the most analogous function we are going to use . 

string answer = get_string("What's your name? ");

printf("Hello ,%s \n",answer);


#include <stdio.h>
#include <cs50.h>
 int main(){
    string answer = get_string("What's your name ? ");
    printf()
 }

%s - string printing 
%i - integer printing 

conditionals are the ways to make a decision . It is almost omnipresent and used everywhere .

if(x<y>){
    printf("x is less than y \n");

}
technically , if we have only one line in the if else code ,we can remove the curly brackets .

if (x<y>){

}else if(){

}
else if (12==14){

}
else{


}

The quality of the design is also very important - while coding the most important is to check whether we need to 

variables 

Variables should be named in such a manner that it makes sense . Dont use the names which does n't make any sense. 
The best way is to name the variable upon its objective .

counter+=1 can also be written as counter++
also counter -=1 can also be written as counter--


# include <stdio.h>
#include <cs50.h>
int main(void){
    int x = get_int("what's x ");
    int y = get_int("what's y ");

    if(x <y){
        printf("x is less then y \n");
    }
    else if (x > y){
        printf("x is greater then y \n");
    }
    else{
        printf("x is equal to y \n");
    }
}

why are we not using only ifs because it gives us the correct response too but its not correctly designed . 
The point to note here is that , we have to make the application design correctly . 
Getting correct response is not only going to help us but design perspective should be good . 

we will come to know that the languages like c , c++ are very vulnerable to hacking whereas the other languages are not . 

string - is indeed a string of text 
char - 


#include <stdio.h>
#include <cs50.h>

int main(void){
    char c = get_char("Do you agree? ");
    if (c =='y' || c =='Y'){
        printf("I agree \n");

    }
    else if (c == 'n' || c == 'N'){
        printf("I don't agree \n");
    }
    else printf("Please enter a valid input \n");
}

when using a string we should use double quotes whereas we should use single quotes in case of char .

we can use logical OR , 
There's a saying in programming - IF U R REPEATING SOMETHING, THERE IS SOMETHING WRONG .

loops: 

#include<stdio.h>

int main(){
    int counter = 3;
    while(counter >0){
        printf("This is the counter number = %i \n", counter);
        counter--;
    }
}

There 's a rule of thumb , if you find yourself copying something again and again , you are probably doing something wrong . 

generally , count something from 0 which is also a conventional way .

for loop 

for(int i=0;i< 3;i++){
    printf("i want to be a programmer \n");
}

while loop :-
if you want to go on the loop forever , the following can be used .

while(true){
    printf("meow\n");
}



Function creation 

void meow(void){
    printf("meow\n");
}

i believe there's is a lot of syntax we have learnt , this is going to continue for long . 

we are going to learn about different operators in c 
which are + , -,*,/,%
#include <stdio.h>
#include <cs50.h>

int add(int x , int y);
int main(){
    int x = get_int("What's x ");
    int y = get_int("What's y ");
    int answer = add(x,y);
    printf("%i\n",answer);
}
int add(int a,int b){
    return a + b;
}

we can use a function inside a function which we have seen earlier in the mathematics journey. 



Linux - Linux is a very popular operating system. All the server out there uses some version of Linux . 
Those students who are more comfortable runs Linux on their on systems . 
It is particularly popular because of its textual interface  (CLI - Command Line Interface )
Graphical User Interface - the view with buttons .

Lets talk about the bigger picture here - what exactly is happening in the cloud version of the cs50?
we have created a server - which is basically a docker container . As the machine starts up and only we have the access to the particular container . 
Once we have the access to the container running on the linux server , we are running the commands with the help of the terminal . 
So There are various commands which can be used for the Linux server which are - 
cd , cp ,ls , mkdir , mv ,rm ,rmdir  
this is going to be challenging using the commands but trust me it is going to be far more easy and productive .
mv meow.c goodbye.c
rm hello.c 



CONST keyword 

DO while loop - If there is a situation which we want to do atleast once . the best option is to use do while . 

int n ;
do{
    n = get_int("What's n " );
}while (n<1)


comments :
a note to self and its a very important . 
// 

Memory :
Random Access Memory popularly known as RAM .

Integer overflow :

we dont store numbers on the basis of the values , rather we store it on the basis of the bits . 
 1 byte = 8 bits 
int = 4 byte which is 32 bits . every  
2 billion is the max at one end can be counted 

Long : 
%li - is the character to print the long integer 

%f - float should be used as the character  
%5f - it will give me 5 decimal places .


Type casting 
 typing something to another . example (float )


Floating point imprecision and the integer overflow are two major problems because of the memory constraints . 

Y2K - 


correctness , design , style 